substitutions:
  device: iridium

esphome:
  name: ${device}
  platformio_options:
    build_flags:
      - -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED

esp8266:
  board: d1_mini

<<: !include base.yaml

output:
  - platform: esp8266_pwm
    pin: D3
    frequency: 1000 Hz
    id: pwm_output_0
  - platform: esp8266_pwm
    pin: D7
    frequency: 1000 Hz
    id: pwm_output_1

binary_sensor:
  - platform: gpio
    pin: D6
    name: "${device}.button"
#    device_class: window

#https://community.home-assistant.io/t/full-guide-to-read-bme680-via-bsec2-on-esp8266/778505

i2c:
#  sda: D2
#  scl: D1
#  scan: true
#  id: bus_a

bme68x_bsec2_i2c:
  address: 0x77
  model: bme680
#  operating_age: 1d
  sample_rate: LP
  supply_voltage: 3.3V

sensor:
  - platform: bme68x_bsec2
    temperature:
#      name: "BME68x Temperature"
      name: "${device}.temperature"
    pressure:
#      name: "BME68x Pressure"
      name: "${device}.pressure"
    humidity:
#      name: "BME68x Humidity"
      name: "${device}.humidity"
    iaq:
#      name: "BME68x IAQ"
      name: "${device}.iaq"
      # "id" referenced by the text_sensor
      id: iaq
    co2_equivalent:
#      name: "BME68x CO2 Equivalent"
      name: "${device}.co2_equivalent"
      # "id" referenced by the text_sensor
      id: co2_equivalent
    breath_voc_equivalent:
#      name: "BME68x Breath VOC Equivalent"
      name: "${device}.breath_voc_equivalent"

text_sensor:
  - platform: template
#    name: "BME68x IAQ Classification"
    name: "${device}.iaq_classification"
    lambda: |-
      if (int(id(iaq).state) == 50 && int(id(co2_equivalent).state) == 500) {
        return {"error"};
      }
      else if (int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) >= 51 && int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) >= 101 && int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) >= 151 && int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) >= 201 && int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) >= 251 && int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) >= 351) {
        return {"Extremely polluted"};
      }
      else {
        return {"error"};
      }

light:
  - platform: monochromatic
    output: pwm_output_0
    name: "${device}.white"
  - platform: monochromatic
    output: pwm_output_1
    name: "${device}.violet"

